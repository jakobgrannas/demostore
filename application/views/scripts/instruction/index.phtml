<?php 

	$config = Zend_Registry::get('baseUrl');
	
	$offset = $config['offset'];

?>
<link href='http://fonts.googleapis.com/css?family=PT+Sans:400,700|Droid+Serif' rel='stylesheet' type='text/css'>
<style>
    body {
        font-family: Arial, Verdana, sans-serif;
        background: url(http://www.vaimo.co.uk/skin/frontend/vaimo/vaimo/images/repeated-background.jpg) repeat;
        margin: 0;
    }
    
    .wrapper {
        background: url(http://www.vaimo.co.uk/skin/frontend/vaimo/vaimo/images/background.jpg) no-repeat;
    }
    
    .container {
        width: 980px;
        margin: auto;
        padding-top: 20px;
    }
    
    ol li {
        margin-bottom: 20px;
    }
    
    .title {
        font-weight: bold;
    }
    
    h1 {
        margin-bottom: 80px;
        margin-top: 30px;
        text-transform: uppercase;
        font-family: "PT Sans",Helvetica,Arial,sans-serif;
    }
    
    h2 {
        border-top: 1px solid #000;
        padding-top: 20px;
        margin-top: 20px;
    }
</style>
<div class="wrapper">
<div class="container">
    <img src="/fetemplate/public/images/instruction/logo.png" alt="Vaimo" />
    <h1>Frontend Homework Instruction</h1>
    <p><i>Please read all instructions before you start!</i></p>
    <p>
    		This is a homework created for you where you, by using your best practice methods, 
    		are going to implement the provided design using <strong>HTML</strong>, <strong>CSS</strong>, <strong>JavaScript</strong> and <strong>PHP</strong>. 
    		The test is used to measure your knowledge and skill level in these techniques and your 
    		test will be reviewed by a frontend developer.
    </p>
    <p>
    	Download the PSD for the design <a href="<?php echo $offset ?>/images/instruction/homework.psd">here</a>.
    </p>
    <h2>Tasks</h2>
    <ol>
        <li>
            <span class="title">Main design implementation</span> (<a href="<?php echo $offset ?>images/instruction/index.png">see screenshoot</a>)
        <p>
    	As you can see, the design consists of a homepage with additional compositions that 
    	show the different interactions a user should be able to do with this page. The design should 
    	be centered in the web browser and header and footer backgrounds should be repeatead 
    	horizontally, covering the entire width of the browser window. 
        </p>
        <p>
            You are free to implement the design how you want (eg. use jQuery, a framework, a css reset) as long as you do it within this Zend Framework setup that has been given to you. If you haven't worked with Zend Framework before it's to get going by read on <a href="http://framework.zend.com/">http://framework.zend.com</a> or use Google.</p>
    	<p><strong><i>A big bonus would be if you implement the design in a responsive framework.</i></strong></p>
    	<p>To get you going, click <a href="<?php echo $offset ?>">here</a> and view page source. </p>
        </li>
        <li><span class="title">Navigation item hover</span> (<a href="<?php echo $offset ?>images/instruction/index-main-nav-item-hover.png">see screenshoot</a>)</li>
        <li><span class="title">Cart hover</span> (<a href="<?php echo $offset ?>images/instruction/index-cart-hover.png">see screenshoot</a>).</li>
        <li><span class="title">Newsletter subscribe</span><br/><br/>
        <ul>
        <li>4.1. <a href="<?php echo $offset ?>images/instruction/index-newsletter-subscribe-failed.png">Subscribe Failed</a></li>
    	<li>4.2. <a href="<?php echo $offset ?>images/instruction/index-newsletter-subscribe-loading.png">Subscribe Loading</a></li>
    	<li>4.3. <a href="<?php echo $offset ?>images/instruction/index-newsletter-subscribe-success.png">Subscribe Success</a></li>
        </ul>
        There are three layer compositions that illustrates a newsletter signup interaction. 
    	To complete the newsletter subscribe ajax-functionality you have a pre-defined controller named NewsletterController.php located in 
    	application/controllers/NewsletterController.php. <br/><br/>You should use the controller function named subscribe in there to generate the 
    	response for the ajax request. You can find the URL for the ajax-request: <a href="<?php echo $offset ?>newsletter/subscribe/">here</a>. 
    	If the user writes an incorrect email address and press submit or if the email address is valid a corresponding message, 
    	as stated in the compositions above, should be shown. You don't need to save any email address into a database, only validate it.
        </li>
        <li>
	Notify us when you're done with <strong>ALL</strong> your tasks. We will not review the test if one or more tasks are missing! 
	Bare in mind that we do not accept the test being sent in as a zip or similiar via mail, it has to be uploaded here.</li>
    </ol>
    <h2>Areas of judgement</h2>
    <ul>
    	<li>How well your implementation match the provided design</li>
    	<li>How well written your code is</li>
    	<li>How well structured your code is</li>
    	<li>How optimized your code is</li>
    	<li>
    		How cross-browser safe your implementation is in the current and major prior release of:
    		<ul>
    			<li>Internet Explorer (Windows)</li>
    			<li>Chrome (Windows & Mac OS)</li>
    			<li>Firefox (Windows & Mac OS)</li>
    			<li>Safari (Windows & Mac OS)</li>
    		</ul>
    	</li>
    </ul>
    <p>
    	If you have any further questions just send an email to <a href="mailto:martin.hellgren@vaimo.com">martin.hellgren@vaimo.com</a>
    </p>
    <p>
    	Good luck!
    </p>
</div>
</div>
